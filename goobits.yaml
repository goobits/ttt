# Goobits configuration for TTT (Terminal Tools for Thoughts)
# This file replaces the old setup-config.yaml and defines everything needed for the build command

# Setup fields for setup.sh
package_name: "goobits-ttt"
command_name: "ttt"
display_name: "TTT - Terminal Tools for Thoughts"
description: "A powerful AI assistant for your terminal"

python:
  minimum_version: "3.8"
  maximum_version: ""  # Empty means no maximum

dependencies:
  required:
    - git
    - pipx
  optional:
    - curl  # For downloading models
    - wget  # Alternative to curl
  development:
    - ruff    # Modern Python linter and formatter
    - mypy    # Static type checker
    - black   # Code formatter
    - pytest  # Testing framework

installation:
  pypi_name: "goobits-ttt"
  development_path: "."

shell_integration:
  enabled: false
  alias: "ttt"

validation:
  check_api_keys: false
  check_disk_space: true
  minimum_disk_space_mb: 100

messages:
  install_success: |
    TTT has been installed successfully!
    You can now use 'ttt' or 't' (if shell integration is enabled) from your terminal.
    
    Quick start:
      ttt "Hello, how can I help you today?"
      ttt status
      ttt models
  
  install_dev_success: |
    TTT has been installed in development mode!
    ‚úÖ Your local changes will be reflected immediately - no reinstalling needed!
    
    Development workflow:
      - Edit code in src/ttt/ directory
      - Test immediately with: ttt --stream "test"  
      - Run tests with: ./test.sh
      - Format code with: ruff format src/ttt/
      - Check types with: mypy src/ttt/
      
    üí° No need to run ./setup.sh upgrade after code changes!
  
  upgrade_success: |
    TTT has been upgraded successfully!
    Check out the latest features with: ttt --version
  
  uninstall_success: |
    TTT has been uninstalled.
    Thank you for using TTT!

# CLI fields for cli.py generation
cli:
  name: "GOOBITS TTT CLI"
  version: "1.0.0"
  display_version: true
  tagline: "Talk to Transformer"
  description: "AI-powered conversations, straight from your command line"
  icon: "ü§ñ"
  enable_recursive_help: true
  enable_help_json: true
  
  header_sections:
    - title: "üí° Quick Start"
      items:
        - { item: 'ttt "What is the meaning of life?"', desc: "Instant response", style: "example" }
        - { item: "ttt chat", desc: "Interactive session", style: "example" }
        - { item: "ttt models", desc: "Explore available models", style: "example" }
        - { item: "ttt config set model gpt-4", desc: "Set your preferred model", style: "example" }


    - title: "üîë Initial Setup"
      items:
        - { item: "1. See providers", desc: "ttt providers", style: "setup" }
        - { item: "2. Add API key", desc: "export OPENROUTER_API_KEY='your-key-here'", style: "setup" }
        - { item: "3. Check setup", desc: "ttt status", style: "setup" }
        - { item: "4. Start chatting", desc: "ttt chat", style: "setup" }
  
  footer_note: "üìö For detailed help on a command, run: [color(2)]ttt [COMMAND][/color(2)] [#ff79c6]--help[/#ff79c6]"
  
  command_groups:
    - name: "Core Commands"
      commands: ["ask", "chat", "list", "status"]
    - name: "Model Management"
      commands: ["models", "info"]
    - name: "Configuration"
      commands: ["config", "tools"]
    - name: "Data Management"
      commands: ["export"]

  commands:
    ask:
      desc: "Quickly ask one-off questions"
      icon: "üí¨"
      is_default: true
      args:
        - name: "prompt"
          desc: "The question or prompt"
          nargs: "*"
      options:
        - name: "model"
          short: "m"
          type: "str"
          desc: "LLM model to use"
        - name: "temperature"
          short: "t"
          type: "float"
          desc: "Sampling temperature (0.0-2.0)"
          default: 0.7
        - name: "max-tokens"
          type: "int"
          desc: "Maximum response length"
        - name: "tools"
          type: "bool"
          desc: "Enable tool usage"
          default: false
        - name: "session"
          short: "s"
          type: "str"
          desc: "Session ID for context"
        - name: "stream"
          type: "bool"
          desc: "Stream the response"
          default: true
        - name: "json"
          type: "flag"
          desc: "Output response in JSON format"
    
    chat:
      desc: "Chat interactively with AI"
      icon: "üí¨"
      options:
        - name: "model"
          short: "m"
          type: "str"
          desc: "LLM model to use"
        - name: "session"
          short: "s"
          type: "str"
          desc: "Session ID to resume or create"
        - name: "tools"
          type: "bool"
          desc: "Enable tool usage in chat"
          default: false
        - name: "markdown"
          type: "bool"
          desc: "Render markdown in responses"
          default: true
    
    list:
      desc: "See available resources"
      icon: "üìú"
      args:
        - name: "resource"
          desc: "Type of resource to list"
          choices: ["models", "sessions", "tools"]
      options:
        - name: "format"
          short: "f"
          type: "str"
          desc: "Output format"
          choices: ["table", "json", "yaml"]
          default: "table"
        - name: "verbose"
          short: "v"
          type: "bool"
          desc: "Show detailed information"
          default: false
    
    status:
      desc: "Verify system and API health"
      icon: "‚úÖ"
      options:
        - name: "json"
          type: "flag"
          desc: "Output status in JSON format"
    
    models:
      desc: "View AI models"
      icon: "üß†"
      options:
        - name: "json"
          type: "flag"
          desc: "Output models in JSON format"
    
    info:
      desc: "Detailed model information"
      icon: "‚ÑπÔ∏è"
      args:
        - name: "model"
          desc: "Model name"
      options:
        - name: "json"
          type: "flag"
          desc: "Output model info in JSON format"
    
    export:
      desc: "Save your chat history"
      icon: "üíæ"
      args:
        - name: "session"
          desc: "Session ID to export"
      options:
        - name: "format"
          short: "f"
          type: "str"
          desc: "Export format"
          choices: ["markdown", "json", "txt"]
          default: "markdown"
        - name: "output"
          short: "o"
          type: "str"
          desc: "Output file path"
        - name: "include-metadata"
          type: "bool"
          desc: "Include timestamps and model info"
          default: false
    
    config:
      desc: "Customize your setup"
      icon: "‚öôÔ∏è"
      subcommands:
        get:
          desc: "Get a configuration value"
          args:
            - name: "key"
              desc: "Configuration key"
        set:
          desc: "Set a configuration value"
          args:
            - name: "key"
              desc: "Configuration key"
            - name: "value"
              desc: "Configuration value"
        list:
          desc: "List all configuration"
          options:
            - name: "show-secrets"
              type: "bool"
              desc: "Include API keys in output"
              default: false
    
    tools:
      desc: "Manage CLI tools and extensions"
      icon: "üõ†Ô∏è"
      subcommands:
        enable:
          desc: "Enable a tool"
          args:
            - name: "tool_name"
              desc: "Name of the tool to enable"
        disable:
          desc: "Disable a tool"
          args:
            - name: "tool_name"
              desc: "Name of the tool to disable"
        list:
          desc: "List all tools"
          options:
            - name: "show-disabled"
              type: "bool"
              desc: "Include disabled tools"
              default: false
  
  config:
    rich_help_panel: true
    show_metavars_column: false
    append_metavars_help: true
    style_errors_suggestion: true
    max_width: 120